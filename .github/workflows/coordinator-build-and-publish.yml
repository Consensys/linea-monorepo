name: coordinator-build

on:
  workflow_call:
    inputs:
      commit_tag:
        required: true
        type: string
      develop_tag:
        required: true
        type: string
      image_name:
        required: true
        type: string
      push_image:
        required: false
        type: boolean
        default: false
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true
  workflow_dispatch:
    inputs:
      push_image:
        description: 'Toggle whether to push image to docker registry'
        required: false
        type: boolean
        default: true

concurrency:
  group: coordinator-build-and-publish-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  build-and-publish:
    runs-on: [self-hosted, ubuntu-20.04, X64, small]
    name: Coordinator build
    env:
      COMMIT_TAG: ${{ inputs.commit_tag }}
      DEVELOP_TAG: ${{ inputs.develop_tag }}
      IMAGE_NAME: ${{ inputs.image_name }}
      PUSH_IMAGE: ${{ inputs.push_image }}
      TAGS: ${{ inputs.image_name }}:${{ inputs.commit_tag }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    steps:
      - name: Set develop tag if main branch
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          echo "TAGS=${{ env.IMAGE_NAME }}:${{ env.COMMIT_TAG }},${{ env.IMAGE_NAME }}:${{ env.DEVELOP_TAG }}" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Build dist
        run: |
          ./gradlew coordinator:app:distZip --no-daemon
      - name: Login to Docker Hub
        if: ${{ env.DOCKERHUB_USERNAME != '' && env.DOCKERHUB_TOKEN != '' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx - local
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: coordinator
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.IMAGE_NAME }}
      - name: Build for testing
        uses: docker/build-push-action@v6
        if: ${{ env.PUSH_IMAGE == 'false' }}
        with:
          context: .
          build-contexts: zip=./coordinator/app/build/distributions/
          file: ./coordinator/Dockerfile
          platforms: linux/amd64
          load: true
          push: false
          tags: ${{ env.TAGS }}
      - name: Save Docker image as artifact
        if: ${{ env.PUSH_IMAGE == 'false' }}
        run: |
          docker save ${{ env.IMAGE_NAME }}:${{ env.COMMIT_TAG }} | gzip > linea-coordinator-docker-image.tar.gz
        shell: bash
      - name: Upload Docker image artifact
        if: ${{ env.PUSH_IMAGE == 'false' }}
        uses: actions/upload-artifact@v4
        with:
          name: linea-coordinator
          path: linea-coordinator-docker-image.tar.gz
      - name: Build & push
        uses: docker/build-push-action@v6
        if: ${{ env.PUSH_IMAGE == 'true' || github.event_name == 'workflow_dispatch' }}
        with:
          context: .
          build-contexts: zip=./coordinator/app/build/distributions/
          file: ./coordinator/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.TAGS }}
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache,mode=max

