name: main

on:
  pull_request:
  push:
    branches:
      - main
      - develop

permissions:
  contents: read
  actions: read
  security-events: write

jobs:
  # Simple check to verify CI is working
  ci-health-check:
    runs-on: ubuntu-latest
    name: CI Health Check
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: CI Health Check
        run: |
          echo "âœ… CI is working!"
          echo "âœ… Standard GitHub runners operational"
          echo "âœ… No external dependencies required"

  filter-commit-changes:
    runs-on: ubuntu-latest
    name: Filter commit changes
    outputs:
      changed-file-count: ${{ steps.filter.outputs.all_count }}
      coordinator: ${{ steps.filter.outputs.coordinator }}
      staterecovery: ${{ steps.filter.outputs.staterecovery }}
      postman: ${{ steps.filter.outputs.postman }}
      prover: ${{ steps.filter.outputs.prover }}
      transaction-exclusion-api: ${{ steps.filter.outputs.transaction-exclusion-api }}
      has-changes-requiring-build: ${{ steps.exclusion-filter.outputs.has-changes-requiring-build }}
      contracts-excluding-local-deployment-artifacts: ${{ steps.exclusion-filter.outputs.contracts-excluding-local-deployment-artifacts }}
      contracts-excluding-local-deployment-artifacts-count: ${{ steps.exclusion-filter.outputs.contracts-excluding-local-deployment-artifacts_count }}
      smart-contracts: ${{ steps.filter.outputs.smart-contracts }}
      linea-sequencer-plugin: ${{ steps.filter.outputs.linea-sequencer-plugin }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Filter commit changes
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 #v3.0.2
        id: filter
        with:
          base: ${{ github.ref }}
          list-files: "json"
          filters: |
            all:
              - '**/**'
            coordinator:
              - 'coordinator/**'
              - 'testdata/**'
              - 'buildSrc/**'
              - 'jvm-libs/**'
              - 'gradle/**'
              - 'build.gradle'
              - 'gradle.properties'
              - 'settings.gradle'
              - '.github/workflows/coordinator-*.yml'
              - '.github/workflows/main.yml'
              - 'config/common/traces-limits-v2.toml'
              - 'config/coordinator/**'
              - 'e2e/**'
              - 'docker/compose-*.yml'
            staterecovery:
              - 'state-recovery/**'
              - 'buildSrc/**'
              - 'jvm-libs/**'
              - 'gradle/**'
              - 'build.gradle'
              - 'gradle.properties'
              - 'settings.gradle'
              - '.github/workflows/staterecovery-*.yml'
              - '.github/workflows/main.yml'
            postman:
              - 'postman/**'
              - 'sdk/**'
              - 'ts-libs/linea-native-libs/**'
              - '.github/workflows/postman-*.yml'
              - '.github/workflows/main.yml'
            prover:
              - 'prover/**'
              - '.github/workflows/prover-*.yml'
              - '.github/workflows/main.yml'
              - 'constraints'
            transaction-exclusion-api:
              - 'transaction-exclusion-api/**'
              - 'jvm-libs/generic/extensions/futures/**'
              - 'jvm-libs/generic/extensions/kotlin/**'
              - 'jvm-libs/generic/json-rpc/**'
              - 'jvm-libs/generic/persistence/**'
              - 'jvm-libs/generic/vertx-helper/**'
              - 'jvm-libs/linea/core/long-running-service/**'
              - 'jvm-libs/linea/core/metrics/**'
              - 'jvm-libs/linea/metrics/**'
              - '.github/workflows/transaction-exclusion-api-*.yml'
              - '.github/workflows/main.yml'
              - 'buildSrc/**'
              - 'gradle/**'
              - 'build.gradle'
              - 'gradle.properties'
              - 'settings.gradle'
            smart-contracts:
              - 'contracts/**'
              - 'testdata/**'
              - 'prover/**'
              - '.github/workflows/main.yml'
              - '.github/workflows/run-smc-tests.yml'
            linea-sequencer-plugin:
              - 'besu-plugins/linea-sequencer/**'
              - '.github/workflows/linea-sequencer-plugin-testing.yml'

      - name: Filter out commit changes
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 #v3.0.2
        id: exclusion-filter
        with:
          base: ${{ github.ref }}
          list-files: "json"
          filters: |
            has-changes-requiring-build:
              - '!**/*.md'
              - '!**/*.mdx'
              - '!**/docs/**'
              - '!docs/**'
            contracts-excluding-local-deployment-artifacts:
              - 'contracts/**'
              - '!contracts/local-deployments-artifacts/**'

  code-analysis:
    uses: ./.github/workflows/codeql.yml

  testing:
    needs: [ filter-commit-changes ]
    if: ${{ needs.filter-commit-changes.outputs.has-changes-requiring-build == 'true' }}
    uses: ./.github/workflows/testing.yml
    with:
      coordinator_changed: ${{ needs.filter-commit-changes.outputs.coordinator || 'false' }}
      linea_sequencer_changed: ${{ needs.filter-commit-changes.outputs.linea-sequencer-plugin || 'false' }}
      postman_changed: ${{ needs.filter-commit-changes.outputs.postman || 'false' }}
      prover_changed: ${{ needs.filter-commit-changes.outputs.prover || 'false' }}
      smart_contracts_changed: ${{ needs.filter-commit-changes.outputs.smart-contracts || 'false' }}
      staterecovery_changed: ${{ needs.filter-commit-changes.outputs.staterecovery || 'false' }}
      transaction_exclusion_api_changed: ${{ needs.filter-commit-changes.outputs.transaction-exclusion-api || 'false' }}
    secrets: inherit

  # Always complete successfully even if no tests run
  ci-summary:
    needs: [ ci-health-check, filter-commit-changes, testing ]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: CI Summary
        run: |
          echo "ðŸŽ‰ CI workflow completed"
          echo "Health check: ${{ needs.ci-health-check.result }}"
          echo "Testing needed: ${{ needs.filter-commit-changes.outputs.has-changes-requiring-build }}"
          echo "Testing result: ${{ needs.testing.result || 'skipped' }}"
