name: Codecov coverage report upload for PRs from external forks

on:
  workflow_run:
    workflows: [main]
    types:
      - completed

jobs:
  filter-commit-changes:
    if: github.event.workflow_run.head_repository.fork == true
    runs-on: gha-runner-scale-set-ubuntu-22.04-amd64-small
    name: Filter commit changes
    outputs:
      coordinator: ${{ steps.filter.outputs.coordinator }}
      smart-contracts: ${{ steps.filter.outputs.smart-contracts }}
      commit-tag: ${{ steps.get-commit-tag.outputs.COMMIT_TAG }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get commit tag
        shell: bash
        id: get-commit-tag
        # COMMIT_TAG will be the commit SHA of the workflow run that triggered this workflow
        # - For a new commit on a PR branch, COMMIT_TAG = head of PR branch
        #
        # Note that we cannot use GITHUB_SHA here because it will always reference the head of main branch
        # Since we intend for this workflow to run only for PRs from an external fork, we want COMMIT_TAG to match the PR branch head
        run: |
          echo "COMMIT_TAG=$(git rev-parse --short ${{ github.event.workflow_run.head_sha }})" >> $GITHUB_OUTPUT
      - name: Show commit tag
        run: |
          echo "COMMIT_TAG: ${{ steps.get-commit-tag.outputs.COMMIT_TAG }}"
      - name: Filter commit changes
        uses: dorny/paths-filter@v3
        id: filter
        with:
          base: ${{ github.ref }}
          list-files: "json"
          filters: |
            coordinator:
              - 'coordinator/**'
              - 'testdata/**'
              - 'buildSrc/**'
              - 'jvm-libs/**'
              - 'gradle/**'
              - 'build.gradle'
              - 'gradle.properties'
              - 'settings.gradle'
              - '.github/workflows/coordinator-*.yml'
              - '.github/workflows/build-and-publish.yml'
              - '.github/workflows/main.yml'
              - '.github/workflows/reuse-*.yml'
              - 'config/common/traces-limits-v1.toml'
              - 'config/common/traces-limits-v2.toml'
              - 'config/coordinator/**'
              - 'e2e/**'
              - 'docker/compose-*.yml'
            smart-contracts:
              - 'contracts/**'
              - 'testdata/**'
              - 'prover/**'
              - '.github/workflows/main.yml'
              - '.github/workflows/run-smc-tests.yml'

  upload-codecov-coordinator:
    needs: [ filter-commit-changes ]
    if: ${{ needs.filter-commit-changes.outputs.coordinator == 'true' }}
    runs-on: gha-runner-scale-set-ubuntu-22.04-amd64-small
    name: upload-codecov-coordinator
    env:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    steps:
      - name: Download Jacoco test coverage report (from coordinator-testing.yml)
        uses: actions/download-artifact@v4
        with:
          name: jacocoRootReport-${{ needs.filter-commit-changes.outputs.commit-tag }}.xml
          path: |
            ${{ github.workspace }}/jacocoRootReport.xml
      - uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          files: ${{ github.workspace }}/jacocoRootReport.xml
          flags: kotlin
          os: linux
          name: codecov-coordinator
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}

  upload-codecov-smart-contracts:
    needs: [ filter-commit-changes ]
    if: ${{ needs.filter-commit-changes.outputs.smart-contracts == 'true' }}
    runs-on: gha-runner-scale-set-ubuntu-22.04-amd64-small
    name: upload-codecov-smart-contracts
    env:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    steps:
      - name: Download smart contract coverage report (from run-smc.tests.yml)
        uses: actions/download-artifact@v4
        with:
          name: smart-contract-coverage-${{ needs.filter-commit-changes.outputs.commit-tag }}.json
          path: |
            ${{ github.workspace }}/coverage-final.json
      - uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          files: ${{ github.workspace }}/coverage-final.json
          flags: hardhat
          os: linux
          name: codecov-contracts
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}