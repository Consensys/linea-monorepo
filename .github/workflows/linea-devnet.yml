name: linea-devnet

on:
  pull_request:
  push:
    branches:
      - main
    paths:
      - 'linea-besu-package/versions/linea-devnet.env'

  workflow_call:
    outputs:
      workflow_run_id: 
        description: "the run id of the workflow"
        value: ${{ jobs.build-and-upload-artifact.outputs.workflow_run_id }}
  workflow_dispatch:

permissions:
  id-token: write  
  contents: read

jobs:
  # filter-commit-changes:
  #   runs-on: gha-runner-scale-set-ubuntu-22.04-amd64-small
  #   name: Filter commit changes
  #   outputs:
  #     linea-besu-package: ${{ steps.filter.outputs.linea-besu-package }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #     - name: Filter commit changes
  #       uses: dorny/paths-filter@v3
  #       id: filter
  #       with:
  #         base: ${{ github.ref }}
  #         list-files: "json"
  #         filters: |
  #           all:
  #             - '**/**'
  #           linea-besu-package:
  #             - 'linea-besu-package/versions/linea-devnet.env'

  build-and-upload-artifact:
    # needs: [ filter-commit-changes ]
    # if: ${{ needs.filter-commit-changes.outputs.linea-besu-package == 'true' }}
    runs-on: gha-runner-scale-set-ubuntu-22.04-amd64-med
    environment: dockerhub
    outputs:
      workflow_run_id: ${{ steps.assemble.outputs.workflow_id }}
      linea_besu_package_tag: ${{ steps.assemble.outputs.dockertag }} 
      expected_traces_api_version: ${{ steps.assemble.outputs.tracer_plugin_version }}
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: build the linea devnet artifacts
        id: assemble
        uses: ./.github/actions/linea-besu-package/assemble-devnet
      
      - name: set up docker buildx
        uses: docker/setup-buildx-action@v3

      - name: set docker build args
        run: |
          echo "Building docker tag: ${{ steps.assemble.outputs.dockertag }}"
          echo "Building docker image: ${{ steps.assemble.outputs.dockerimage }}"

      - name: build the combined manifest
        uses: docker/build-push-action@v6
        env:
          DOCKER_BUILD_SUMMARY: false
        with:
          context: linea-besu-package/linea-besu/.
          platforms: linux/amd64
          provenance: false
          # cache-from: type=local,src=/tmp/.buildx-cache
          # cache-to: type=local,dest=/tmp/.buildx-cache          
          build-args: |
            VERSION=${{ steps.assemble.outputs.dockertag }}
            VCS_REF=${{ github.sha }}
            BUILD_DATE=${{ steps.assemble.outputs.build_date }}
          load: true
          push: false
          tags: |
            consensys/linea-besu-package:${{ steps.assemble.outputs.dockertag }}
      
      - name: Save Docker image as artifact
        run: |
          docker images
          docker save consensys/linea-besu-package:${{ steps.assemble.outputs.dockertag }} | gzip > linea-besu-package-image.tar.gz
        shell: bash

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v4
        with:
          name: linea-besu-package
          path: linea-besu-package-image.tar.gz

  run-e2e-tests:
    needs: [ build-and-upload-artifact ]
    concurrency:
      group: run-e2e-tests-${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}
    uses: ./.github/workflows/besu-package-reuse-run-e2e-tests.yml
    with:
      linea_besu_package_tag: ${{ needs.build-and-upload-artifact.outputs.linea_besu_package_tag }} 
      expected_traces_api_version: ${{ needs.build-and-upload-artifact.outputs.expected_traces_api_version }}
      e2e-tests-logs-dump: true
    secrets: inherit

  build-and-push-dockerhub:
    needs: [ run-e2e-tests ]
    if: ${{ always() && needs.run-e2e-tests.outputs.tests_outcome == 'success' }}
    runs-on: gha-runner-scale-set-ubuntu-22.04-amd64-med
    environment: dockerhub
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    outputs:
      workflow_run_id: ${{ steps.workflow_details.outputs.id }}
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: build the linea devnet artifacts
        id: assemble
        uses: ./.github/actions/linea-besu-package/assemble-devnet

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: set up docker buildx
        uses: docker/setup-buildx-action@v3   

      - name: Login to Docker Hub
        if: ${{ env.DOCKERHUB_USERNAME != '' && env.DOCKERHUB_TOKEN != '' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: set docker build args
        run: |
          echo "Building docker tag: ${{ steps.assemble.outputs.dockertag }}"
          echo "Building docker image: ${{ steps.assemble.outputs.dockerimage }}"

      - name: build and push the combined manifest
        uses: docker/build-push-action@v6
        env:
          DOCKER_BUILD_SUMMARY: false
        with:
          context: linea-besu-package/linea-besu/.
          platforms: linux/arm64,linux/amd64
          provenance: false
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache          
          build-args: |
            VERSION=${{ steps.assemble.outputs.dockertag }}
            VCS_REF=${{ github.sha }}
            BUILD_DATE=${{ steps.assemble.outputs.build_date }}
          push: true
          tags: |
            consensys/linea-besu-package:${{ steps.assemble.outputs.dockertag }}

      ### release process artifacts
      ## adds one more tag :latest the above push on a release 
      - name: build and push the combined manifest
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/build-push-action@v6
        env:
          DOCKER_BUILD_SUMMARY: false
        with:
          context: linea-besu-package/linea-besu/.
          platforms: linux/arm64,linux/amd64
          provenance: false
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache          
          build-args: |
            VERSION=${{ steps.assemble.outputs.dockertag }}
            VCS_REF=${{ github.sha }}
            BUILD_DATE=${{ steps.assemble.outputs.build_date }}
          push: true
          tags: |
            consensys/linea-besu-package:devnet-latest

      ### update the release notes with docker hashes
      - name: create the release notes and then the release
        if: startsWith(github.ref, 'refs/tags/v')
        id: release_create_artifacts
        run: |
          cd release
          
          MANIFEST=$(docker manifest inspect consensys/linea-besu-package:${{ steps.assemble.outputs.dockertag }})
          if [ $? -eq 0 ]; then
            echo "### Docker Image Details" >> output.md
            echo "" >> output.md
            echo "To pull the image, use the following command:" >> output.md
            echo "\`\`\`" >> output.md
            echo "docker pull consensys/linea-besu-package:${{ steps.assemble.outputs.dockertag }}" >> output.md
            echo "\`\`\`" >> output.md
            echo "" >> output.md
            echo "| Digest | OS | Architecture |" >> output.md
            echo "|--------|----|--------------|" >> output.md
            echo "$MANIFEST" | jq -r '.manifests[] | select(.platform.architecture != "unknown" and .platform.os != "unknown") | "| \(.digest) | \(.platform.os) | \(.platform.architecture) |"' >> output.md
          else
            echo "Docker image consensys/linea-besu-package:${{ steps.assemble.outputs.dockertag }} does not exist on dockerhub"
            exit 1
          fi

      - name: upload linea-devnet artifacts
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v4
        with:
          name: linea-devnet
          retention-days: 1
          path: |
            ./release
