name: Cache Docker Images CI
on:
  workflow_call:
    secrets:
      DOCKERHUB_USERNAME:
        required: false
      DOCKERHUB_TOKEN:
        required: false

permissions:
  contents: write
  issues: write
  pull-requests: write
  actions: write

jobs:
  check-dockerhub-secrets-present:
    runs-on: gha-runner-scale-set-ubuntu-22.04-amd64-small
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    name: Check if DockerHub secrets are present
    outputs:
      secrets_present: ${{ steps.check-secrets-present-step.outputs.DOCKERHUB_SECRET_PRESENT }}
    steps:
      - id: check-secrets-present-step
        run: |
          echo DOCKERHUB_SECRET_PRESENT=${{ env.DOCKERHUB_USERNAME != '' && env.DOCKERHUB_TOKEN != '' }} >> $GITHUB_OUTPUT

  changes:
    needs: [ check-dockerhub-secrets-present ]
    if: ${{ always() && needs.check-dockerhub-secrets-present.outputs.secrets_present == 'true' }}
    runs-on: gha-runner-scale-set-ubuntu-22.04-amd64-small
    name: Filter commit changes
    outputs:
      cache_images: ${{ steps.filter.outputs.cache_images }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Filter commit changes
        uses: dorny/paths-filter@v3
        id: filter
        with:
          base: ${{ github.ref }}
          list-files: "json"
          filters: |
            cache_images:
              - 'docker/compose.yml'
              - 'docker/compose-local-dev.overrides.yml'
              - 'docker/compose-local-dev-traces-v2.overrides.yml'

  pull-and-cache-images:
    needs: [ check-dockerhub-secrets-present, changes ]
    if: ${{ always() && needs.check-dockerhub-secrets-present.outputs.secrets_present == 'true' && needs.changes.outputs.cache_images == 'true' }}
    runs-on: gha-runner-scale-set-ubuntu-22.04-amd64-med
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Compute docker images hash
        id: compute-docker-images-hash
        run: |
          docker_images=$(docker compose -f docker/compose.yml -f docker/compose-local-dev-traces-v2.overrides.yml --profile l1 --profile l2 config 2>/dev/null | grep "image:" | awk '{print $2}')
          docker_images_unique=$(echo $docker_images | xargs -n1 | sort -u | xargs)
          echo DOCKER_IMAGES=$(echo $docker_images) >> $GITHUB_OUTPUT
          echo DOCKER_IMAGES_UNIQUE=$(echo -n $docker_images_unique) >> $GITHUB_OUTPUT
          echo DOCKER_IMAGES_HASH=$(echo -n $docker_images_unique | sha256sum | awk '{print $1}') >> $GITHUB_OUTPUT
      - name: Show docker images hash
        id: show-docker-images-hash
        run: |
          echo "DOCKER_IMAGES: ${{ steps.compute-docker-images-hash.outputs.DOCKER_IMAGES }}"
          echo "DOCKER_IMAGES_UNIQUE: ${{ steps.compute-docker-images-hash.outputs.DOCKER_IMAGES_UNIQUE }}"
          echo "DOCKER_IMAGES_HASH: ${{ steps.compute-docker-images-hash.outputs.DOCKER_IMAGES_HASH }}"
      - name: Create cached docker images folder
        run: |
          mkdir -p ~/docker-images-cached
      - name: Cache common docker images
        id: cache-common-docker-images
        # continue-on-error: true
        uses: actions/cache@v4
        with:
          path: ~/docker-images-cached
          key: docker-images-cache-${{ steps.compute-docker-images-hash.outputs.DOCKER_IMAGES_HASH }}
          lookup-only: true
      - name: Login to Docker Hub
        if: steps.cache-common-docker-images.outputs.cache-hit != 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Pull docker images
        if: steps.cache-common-docker-images.outputs.cache-hit != 'true'
        run: |
          docker compose -f docker/compose.yml -f docker/compose-local-dev-traces-v2.overrides.yml --profile l1 --profile l2 pull
      - name: Save docker images
        if: steps.cache-common-docker-images.outputs.cache-hit != 'true'
        run: |
          docker save ${{ steps.compute-docker-images-hash.outputs.DOCKER_IMAGES_UNIQUE }} -o  ~/docker-images-cached/docker-images.tar

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      # - name: Pull docker images from compose
      #   continue-on-error: true
      #   run: |
      #     docker compose -f docker/compose.yml -f docker/compose-local-dev-traces-v2.overrides.yml --profile l1 --profile l2 pull
      # - name: Save Docker images
      #   run: |
      #     mkdir -p ./cached-docker-images
      #     images=$(docker compose -f docker/compose.yml -f docker/compose-local-dev-traces-v2.overrides.yml --profile l1 --profile l2 config | grep "image:" | awk '{print $2}')
      #     for image in $images; do
      #       imageFileName=$(echo $image | sed -e 's|.*/||' -e 's|:|-|' -e 's/\./_/g')
      #       echo $image - ${imageFileName}
      #       docker save $image > ./cached-docker-images/${imageFileName}.tar
      #     done
      # - name: Cache common docker images
      #   continue-on-error: true
      #   uses: actions/cache/save@v4
      #   with:
      #     path: ./cached-docker-images
      #     key: cached-docker-images
