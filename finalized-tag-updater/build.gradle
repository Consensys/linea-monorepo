plugins {
  // FIXME: This brings too many dependencies, refactor later
  id 'net.consensys.zkevm.kotlin-library-conventions'
  id 'com.github.johnrengelman.shadow' version '7.1.2'
}

repositories {
  maven {
    url "https://artifacts.consensys.net/public/linea-besu/maven/"
    content {
      includeGroupByRegex('io\\.consensys\\..*')
    }
  }
}

ext.groupsToIncludeInShadow = [
  "build.linea.*",
  "io.micrometer.*",
  "org.jetbrains.kotlin:kotlin-reflect.*",
  "org.jetbrains.kotlinx:kotlinx-datetime.*",
  "tech.pegasys.teku.internal:async",
  "io.vertx.*",
  // this can be removed once Besu updates to Vertx 4.12+
  "com.michael-bull.kotlin-result:kotlin-result.*",
  "com.fasterxml.jackson.module:jackson-module-kotlin",
]

def canIncludeLib(String lib) {
  def allowed = groupsToIncludeInShadow.find { libAllowed ->
    lib.matches(libAllowed)
  } != null
  allowed
}


shadowJar {
  if ("${project.version}" != 'unspecified') {
    archiveClassifier.set('')
    archiveVersion.set("${project.version}")
  }

  dependencies {
    exclude {dependency ->
      def shallExclude = !canIncludeLib("${dependency.moduleGroup}:${dependency.moduleName}")
      shallExclude
    }
  }

  manifest {
    attributes(
        'Specification-Title': archiveBaseName,
        'Specification-Version': project.version,
        'Implementation-Title': archiveBaseName,
        'Implementation-Version': project.version,
        )
  }
}

dependencies {
  annotationProcessor 'com.google.auto.service:auto-service:1.1.1'
  compileOnly 'com.google.auto.service:auto-service:1.1.1'
  compileOnly 'com.google.auto.service:auto-service-annotations:1.1.1'
  compileOnly 'io.consensys.linea-besu:plugin-api:24.11-delivery39'
  compileOnly 'info.picocli:picocli:4.7.6'
  compileOnly 'io.vertx:vertx-core'

  implementation project(":jvm-libs:generic:extensions:kotlin")
  implementation project(':jvm-libs:linea:core:long-running-service')
  implementation project(':jvm-libs:generic:extensions:futures')
  implementation project(':jvm-libs:linea:web3j-extensions')
  implementation project(':jvm-libs:linea:clients:linea-l1-contract-client')
  implementation ("org.web3j:core:${libs.versions.web3j.get()}") {
    exclude group: 'org.slf4j', module: 'slf4j-nop'
  }
  testImplementation 'io.consensys.linea-besu:plugin-api:24.11-delivery39'
  testImplementation 'info.picocli:picocli:4.7.6'
  testImplementation 'io.vertx:vertx-core'
}

tasks.register('copyShadowJarToLocalBesu', Copy) {
  def jarFileSuffix = "${project.version}" != 'unspecified' ? "${project.version}" : "all"
  def jarFiles = project.getLayout().buildDirectory.dir("libs").get()
      .asFileTree
      .filter { it.name.endsWith("-${jarFileSuffix}.jar") }
      .files
  if (jarFiles.size() > 0) {
    from jarFiles[0]
    into file("$rootDir/tmp/linea-besu-sequencer/plugins")
  }
}
