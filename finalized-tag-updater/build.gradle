plugins {
  // FIXME: This brings too many dependencies, refactor later
  id 'net.consensys.zkevm.kotlin-library-conventions'
  id 'com.github.johnrengelman.shadow' version '7.1.2'
}

repositories {
  maven {
    url "https://artifacts.consensys.net/public/linea-besu/maven/"
    content {
      includeGroupByRegex('io\\.consensys\\..*')
    }
  }
}

shadowJar {
  if ("${project.version}" != 'unspecified') {
    archiveClassifier.set('')
    archiveVersion.set("${project.version}")
  }
  manifest {
    attributes(
      'Specification-Title': archiveBaseName,
      'Specification-Version': project.version,
      'Implementation-Title': archiveBaseName,
      'Implementation-Version': project.version,
    )
  }
}

dependencies {
  annotationProcessor 'com.google.auto.service:auto-service:1.1.1'
  compileOnly 'com.google.auto.service:auto-service:1.1.1'
  compileOnly 'com.google.auto.service:auto-service-annotations:1.1.1'
  compileOnly 'io.consensys.linea-besu:plugin-api:24.7-develop-c0029e6'
  compileOnly 'info.picocli:picocli:4.7.6'
  compileOnly 'io.vertx:vertx-core'

  implementation project(":jvm-libs:generic:extensions:kotlin")
  implementation project(':jvm-libs:linea:core:long-running-service')
  implementation project(':jvm-libs:generic:extensions:futures')
  implementation project(':jvm-libs:linea:web3j-extensions')
  implementation 'build.linea:l1-rollup-contract-client:6.0.0-rc2'
  implementation ("org.web3j:core:${libs.versions.web3j.get()}") {
    exclude group: 'org.slf4j', module: 'slf4j-nop'
  }
  testImplementation 'io.consensys.linea-besu:plugin-api:24.7-develop-c0029e6'
  testImplementation 'info.picocli:picocli:4.7.6'
  testImplementation 'io.vertx:vertx-core'
  testImplementation "org.hyperledger.besu:besu-datatypes:${libs.versions.besu.get()}"
}

tasks.register('copyShadowJarToLocalBesu', Copy) {
  def jarFileSuffix = "${project.version}" != 'unspecified' ? "${project.version}" : "all"
  def jarFile = project.getLayout().buildDirectory.dir("libs").get()
    .asFileTree
    .filter { it.name.endsWith("-${jarFileSuffix}.jar") }
    .singleFile

  from jarFile
  into file("$rootDir/tmp/linea-besu-sequencer/plugins")
}
