import { test } from "@playwright/test";
import { getCctpMessageExpiryBlock } from "./cctp";

const { expect, describe } = test;

describe("getCctpMessageExpiryBlock", () => {
  test("should return undefined for empty byte string", () => {
    const message = "0x";
    const resp = getCctpMessageExpiryBlock(message);
    expect(resp).toBeUndefined();
  });

  test("should return 0 if 0 expiryTimestamp encoded", () => {
    const message =
      "0x00000001000000000000000b41d77498ae6f504499ff1ead8c1c2a3318d48063b8022f8215f7631153534d210000000000000000000000008fe6b999dc680ccfdd5bf7eb0974218be2542daa0000000000000000000000008fe6b999dc680ccfdd5bf7eb0974218be2542daa0000000000000000000000000000000000000000000000000000000000000000000003e8000007d0000000010000000000000000000000001c7d4b196cb0c7b01d743fbc6116a902379c7238000000000000000000000000558d9534cac58f743a3a9e5382f77575a2595dcb0000000000000000000000000000000000000000000000000000000000002710000000000000000000000000558d9534cac58f743a3a9e5382f77575a2595dcb000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    const resp = getCctpMessageExpiryBlock(message);
    expect(resp).toBe(BigInt(0));
  });
});

// Example 'baby' response
// {
//   "messages": [
//       {
//           "attestation": "PENDING",
//           "message": "0x",
//           "eventNonce": "0xaf75c4d910592bc593c34bf6eb89937b1326ad43d9e3cf45581512efcf3e7da7",
//           "cctpVersion": 2,
//           "status": "pending_confirmations"
//       }
//   ]
// }

// Example senior response
// {
//   "messages": [
//       {
//           "attestation": "0x06207a5ca18bc3860b5c546e8a18f6032180b3792ece47747774b9de14f62b717c51f439f0263b733b223e507a1aa0e56c823633dbb6931f864598f5c428237b1ca042a1555747bf4d7dac0b4184dad34dfed9be62ce978c18d619c8c537254a2e7b8331068215677ea900e02dd00ffee67fb61a93280c0eec789a52eb03f385b51c",
//           "message": "0x00000001000000000000000b41d77498ae6f504499ff1ead8c1c2a3318d48063b8022f8215f7631153534d210000000000000000000000008fe6b999dc680ccfdd5bf7eb0974218be2542daa0000000000000000000000008fe6b999dc680ccfdd5bf7eb0974218be2542daa0000000000000000000000000000000000000000000000000000000000000000000003e8000007d0000000010000000000000000000000001c7d4b196cb0c7b01d743fbc6116a902379c7238000000000000000000000000558d9534cac58f743a3a9e5382f77575a2595dcb0000000000000000000000000000000000000000000000000000000000002710000000000000000000000000558d9534cac58f743a3a9e5382f77575a2595dcb000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000",
//           "eventNonce": "0x41d77498ae6f504499ff1ead8c1c2a3318d48063b8022f8215f7631153534d21",
//           "cctpVersion": 2,
//           "status": "complete"
//       }
//   ]
// }
