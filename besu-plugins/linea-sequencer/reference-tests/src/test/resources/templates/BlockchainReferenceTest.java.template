/*
 * Copyright Consensys Software Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 */

package net.consensys.linea.generated.blockchain;

import static net.consensys.linea.BlockchainReferenceTestTools.executeTest;
import static net.consensys.linea.BlockchainReferenceTestTools.generateTestParametersForConfig;

import net.consensys.linea.BlockchainReferenceTestCaseSpec;

import java.util.stream.Stream;

import net.consensys.linea.EvmExtension;

import org.junit.jupiter.api.Tag;
import org.junit.jupiter.api.extension.ExtendWith;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;

import static org.junit.jupiter.api.Assumptions.assumeTrue;

/** The blockchain test operation testing framework entry point. */
@Tag("ReferenceTest")
@ExtendWith(EvmExtension.class)
public class %%TESTS_NAME%% {

  private static final String[] TEST_CONFIG_FILE_DIR_PATH = new String[] {%%TESTS_FILE%%};

  public static Stream<Arguments> getTestParametersForConfig() {
    return generateTestParametersForConfig(TEST_CONFIG_FILE_DIR_PATH).stream().map(params ->
        Arguments.of(params[0], params[1], params[2])
        );
  }

  @ParameterizedTest(name = "Name: {0}")
  @MethodSource("getTestParametersForConfig")
  public void execution(
      final String name,
      final BlockchainReferenceTestCaseSpec spec,
      final boolean runTest) {
    assumeTrue(runTest, "Test " + name + " was ignored");
    executeTest(spec);
  }
}
