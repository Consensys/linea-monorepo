#########################
# Start of Commit Message
#########################
# Title

# Body


# Footer

#######################
# End of Commit Message
#######################
#
# Keep each commit line under 50 characters
# Following conventional commits 1.0.0
#
# Use the prefix naming convention:
# fix: A bug fix. Correlates with PATCH in SemVer
# feat: A new feature. Correlates with MINOR in SemVer
# docs: Documentation only changes
# style: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)
# refactor: A code change that neither fixes a bug nor adds a feature
# perf: A code change that improves performance
# test: Adding missing or correcting existing tests
# build: Changes that affect the build system or external dependencies (example scopes: pip, docker, npm)
# ci: Changes to our CI configuration files and scripts (example scopes: GitLabCI)
#
# For full specification check: https://www.conventionalcommits.org/en/v1.0.0/
#
# Commits should follow the format below:
#
# [Title]
# <type>: In under 50 characters, description of the commit
#
# [Body]
# Explain in detail what was done in this commit and
# what this is supposed to achieve. Keep this section
# under 72 characters per line.
#
# [Footer]
# Use this section to add any PR/Ticket numbers that this
# commit is solving or any co-authors. If none of these apply, # leave it empty.
#
