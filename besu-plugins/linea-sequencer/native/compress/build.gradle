/*
 * Copyright Consensys Software Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 */

plugins {
  id 'java-library'
  id 'common-plugins'
}

apply from: rootProject.file("gradle/java.gradle")
apply from: rootProject.file("gradle/dependency-management.gradle")
apply from: rootProject.file('gradle/common-dependencies.gradle')
apply from: rootProject.file("gradle/build-aliases.gradle")
apply from: rootProject.file("gradle/lint.gradle")
apply from: rootProject.file("gradle/tests.gradle")

tasks.register('buildJNI', Exec) {
  if(project.hasProperty("releaseNativeLibs")) {
    workingDir buildscript.sourceFile.parentFile.parentFile
    commandLine 'sh', '-c', './release.sh'
  } else if(org.gradle.internal.os.OperatingSystem.current().isWindows()) {
    workingDir buildscript.sourceFile.parentFile.parentFile
    commandLine 'wsl', './release.sh'
  } else {
    workingDir buildscript.sourceFile.parentFile.parentFile
    commandLine 'sh', '-c', './build.sh'
  }
}

compileJava{
  dependsOn buildJNI
}

dependencies {
  implementation 'io.consensys.protocols:tuweni-bytes'
  implementation 'net.java.dev.jna:jna'
}


tasks.register('macArmLibCopy', Copy) {
  from 'build/native/darwin-arm64/libcompress_jni.dylib'
  into 'build/resources/main/darwin-aarch64'
}
processResources.dependsOn macArmLibCopy

tasks.register('macLibCopy', Copy) {
  from 'build/native/darwin-x86-64/libcompress_jni.dylib'
  into 'build/resources/main/darwin-x86-64'
}
processResources.dependsOn macLibCopy

tasks.register('linuxLibCopy', Copy) {
  from 'build/native/linux-x86_64/libcompress_jni.so'
  into 'build/resources/main/linux-x86-64'
}
processResources.dependsOn linuxLibCopy

tasks.register('linuxArm64LibCopy', Copy) {
  from 'build/native/linux-aarch64/libcompress_jni.so'
  into 'build/resources/main/linux-aarch64'
}
processResources.dependsOn linuxArm64LibCopy

tasks.register('windowsLibCopy', Copy) {
  from 'build/native/compress_jni.dll'
  into 'build/resources/main/win32-x86-64'
}
processResources.dependsOn windowsLibCopy

jar {
  archiveBaseName = 'linea-native-compress'
  version = calculateVersion()
  includeEmptyDirs = false
}
