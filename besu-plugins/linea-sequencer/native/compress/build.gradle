/*
 * Copyright Hyperledger Besu Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 */

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'com.jfrog.artifactory' version '4.20.0'
}

apply from: rootProject.file("gradle/dependency-management.gradle")

repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()
}

tasks.register('callBuildSh', Exec) {
    workingDir buildscript.sourceFile.parentFile
    commandLine 'bash', '../build.sh'
}

compileJava{
    dependsOn callBuildSh
}

dependencies {
    implementation 'net.java.dev.jna:jna'
    implementation 'io.tmio:tuweni-bytes'

    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.assertj:assertj-core'
    testImplementation 'org.mockito:mockito-core'
}


tasks.register('macArmLibCopy', Copy) {
    from 'build/darwin-aarch64/lib/libcompress_jni.dylib'
    into 'build/resources/main/darwin-aarch64'
}
processResources.dependsOn macArmLibCopy

tasks.register('macLibCopy', Copy) {
    from 'build/darwin-x86-64/lib/libcompress_jni.dylib'
    into 'build/resources/main/darwin-x86-64'
}
processResources.dependsOn macLibCopy

tasks.register('linuxLibCopy', Copy) {
    from 'build/linux-gnu-x86_64/lib/libcompress_jni.so'
    into 'build/resources/main/linux-x86-64'
}
processResources.dependsOn linuxLibCopy

tasks.register('linuxArm64LibCopy', Copy) {
    from 'build/linux-gnu-aarch64/lib/libcompress_jni.so'
    into 'build/resources/main/linux-aarch64'
}
processResources.dependsOn linuxArm64LibCopy

jar {
    archiveBaseName = 'linea-native-compress'
    includeEmptyDirs = false
    manifest {
        attributes(
                'Specification-Title': archiveBaseName,
                'Specification-Version': project.version,
                'Implementation-Title': archiveBaseName,
                'Implementation-Version': project.version,
                'Automatic-Module-Name': 'org.hyperledger.besu.nativelib.compress'
        )
    }
}

jar.dependsOn(callBuildSh)

sourceSets {
    main {
        resources {
            srcDirs '${buildDir}/darwin-aaarch64'
            srcDirs '${buildDir}/darwin-x86-64'
            srcDirs '${buildDir}/linux-gnu-x86_64'
            srcDirs '${buildDir}/linux-gnu-aarch64'
        }
    }
}


