name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  macosNativeLib:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin

      - name: Build native lib
        run: ./gradlew :native:compress:buildJNI

      - name: List built files
        run: ls -lR native/compress/build

      - name: Upload macOS native lib asset
        uses: actions/upload-artifact@v4
        with:
          name: libcompress_jni.dylib
          path: 'native/compress/build/native/darwin-arm64/libcompress_jni.dylib'

  build:
    runs-on: ubuntu-latest
    needs: macosNativeLib
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin
          cache: 'gradle'

      - name: Create macOS native lib dir
        run: mkdir -p native/compress/build/native/darwin-arm64

      - name: Get the built macOS native lib
        uses: actions/download-artifact@v4
        with:
          name: libcompress_jni.dylib
          path: native/compress/build/native/darwin-arm64

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Build without tests
        run: ./gradlew build -PreleaseNativeLibs -PreleaseVersion=${{ steps.get_version.outputs.VERSION }} -x test -x spotlessCheck
        env:
          JAVA_OPTS: -Xmx2g -Dorg.gradle.daemon=false

      - name: Draft Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: 'Draft release of version ${{ steps.get_version.outputs.VERSION }}.'
          draft: true
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./sequencer/build/libs/linea-sequencer-${{ steps.get_version.outputs.VERSION }}.jar
          asset_name: linea-sequencer-${{ steps.get_version.outputs.VERSION }}.jar
          asset_content_type: application/octet-stream
