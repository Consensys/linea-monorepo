# Define named volumes
volumes:
  linea-mainnet-geth:
    name: "linea-mainnet-geth"
  linea-mainnet-besu:
    name: "linea-mainnet-besu"
  linea-mainnet-erigon:
    name: "linea-mainnet-erigon"
  linea-mainnet-nethermind:
    name: "linea-mainnet-nethermind"
  linea-mainnet-maru:
    name: "linea-mainnet-maru"

# ─────────────────────────────────────────────
# ⚠️ Execution Layer Clients Overview
# Only one execution client is actively connected to the Maru Consensus Layer at a time
# and is referenced in the Maru config.toml file as el-client
#
# The other EL clients are included here for reference or testing purposes only.
# The user is free to choose any el client they want.
# ─────────────────────────────────────────────
services:
  # Besu node (Execution Layer for Maru)
  besu-node:
    hostname: el-client
    container_name: linea-besu
    image: consensys/linea-besu-package:beta-v4.0-rc17-20251024131506-d32162b

    platform: linux/amd64
    healthcheck:
      test: ["CMD-SHELL", "bash -c '[ -f /tmp/pid ]'"]
      interval: 1s
      timeout: 1s
      retries: 120
    restart: unless-stopped
    ports:
      - "8545:8545" # JSON-RPC
      - "8546:8546" # WebSocket
      - "8550:8550" # Engine API (for Maru)
      - "30303:30303" # P2P TCP
      - "30303:30303/udp" # P2P UDP
    environment:
      - JAVA_OPTS=-Xmx2g
      - LOG4J_CONFIGURATION_FILE=/var/lib/besu/log4j.xml
    command:
      - --config-file=/var/lib/besu/linea-besu.config.toml
      - --Xdns-enabled=true
      - --Xdns-update-enabled=true
      - --Xrpc-ipc-enabled=true
      - --static-nodes-file=/var/lib/besu/static-nodes.json
    volumes:
      - ./besu/linea-besu.config.toml:/var/lib/besu/linea-besu.config.toml:ro
      - ./besu/besu-genesis.json:/var/lib/besu/genesis.json:ro
      - ./besu/log4j.xml:/var/lib/besu/log4j.xml
      - ./execution-layer-static-nodes.json:/var/lib/besu/static-nodes.json:ro
      - ./engine-jwt:/var/lib/besu/jwt:ro
      - linea-mainnet-besu:/opt/besu

  # Maru Consensus Layer
  maru-node:
    hostname: linea-maru
    container_name: linea-maru
    image: consensys/maru:a479db1
    restart: unless-stopped
    ports:
      - "8080:8080" # Beacon/REST API
      - "9000:9000/tcp" # P2P main port
      - "9000:9000/udp" # P2P discovery port (UDP only)
      - "9090:9090" # Metrics (optional)
    environment:
      - JAVA_OPTS=-Xmx2g
    volumes:
      - ./maru/maru-config.toml:/opt/consensys/maru/configs/maru-config.toml:ro
      - ./maru/maru-genesis.json:/opt/consensys/maru/configs/maru-genesis.json:ro
      - ./maru/log4j.xml:/opt/consensys/maru/configs/log4j.xml:ro
      - ./engine-jwt:/opt/consensys/maru/configs/jwt:ro
      - linea-mainnet-maru:/opt/maru
    command:
      - "java"
      - "-Dlog4j2.configurationFile=/opt/consensys/maru/configs/log4j.xml"
      - "-jar"
      - "/opt/consensys/maru/maru.jar"
      - "--maru-genesis-file"
      - "/opt/consensys/maru/configs/maru-genesis.json"
      - "--config"
      - "/opt/consensys/maru/configs/maru-config.toml"

  # Geth initialization
  geth-init:
    image: ethereum/client-go:v1.16.5
    command:
      - init
      - /genesis.json
    volumes:
      - ./geth/geth-genesis.json:/genesis.json:ro
      - linea-mainnet-geth:/root/.ethereum

  # Geth node
  geth-node:
    hostname: el-client
    container_name: geth-node
    image: ethereum/client-go:v1.16.5
    pull_policy: always
    restart: unless-stopped
    stop_grace_period: 30s
    depends_on:
      geth-init:
        condition: service_completed_successfully
    command:
      - --networkid=59144
      - --syncmode=snap
      - --http
      - --http.addr=0.0.0.0
      - --http.port=8545
      - --http.corsdomain=*
      - --http.api=admin,web3,eth,txpool,net
      - --http.vhosts=*
      - --bootnodes=enode://069800db9e6e0ec9cadca670994ef1aea2cfd3d88133e63ecadbc1cdbd1a5847b09838ee08d8b5f02a9c32ee13abeb4d4104bb5514e5322c9d7ee19f41ff3e51@3.132.73.210:31002,enode://a8e03a71eab12ec4b47bb6e19169d8e4dc7a58373a2476969bbe463f2dded6003037fa4dd5f71e15027f7fc8d7340956fbbefed67ddd116ac19a7f74da034b61@3.132.73.210:31003,enode://97706526cf79df9d930003644f9156805f6c8bd964fc79e083444f7014ce10c9bdd2c5049e63b58040dca1d4c82ebef970822198cf0714de830cff4111534ff1@18.223.198.165:31004,enode://24e1c654a801975a96b7f54ebd7452ab15777fc635c1db25bdbd4425fdb04e7f4768e9e838a87ab724320a765e41631d5d37758c933ad0e8668693558125c8aa@18.223.198.165:31000,enode://27010891d960f73d272a553f72b6336c6698db3ade98d631f09c764e57674a797be5ebc6829ddbb65ab564f439ebc75215d20aa98b6f351d12ea623e7d139ac3@3.132.73.210:31001,enode://228e1b8a4931e46f383e30721dac21fb8fb4e5e1b32c870e13b25478c82db3dc1cd9e7ceb93d302a766466b55638cc9c5cbfc43aa48fa41ced19baf365951f76@3.1.142.64:31002,enode://c22eb0d40fc3ad5ea710aeddea906567778166bfe18c157955e8c39b23a46c45db18a0fa2ba07f2b64c81178a8c796aec2a29151533920ead06fcdfc6d8d03c6@47.128.192.57:31004,enode://8ce733abe39fd7ae0a278b9893f85c1193c611a3886168690dd843435460f22cc4d61f9e8d0ace7f5905836a665319a31cccdaacdada2acc69972c382ecce7db@3.1.142.64:31003,enode://b7c1b2bed65a855f7a2104aac9a14674dfdf018fdac763415b373b29ce18cdb81d36328ba4e5c9f12629f3a50c3e8f9ee048f22dbdbe93a82813da89c6b81334@51.20.235.126:31004,enode://95270e0550848a72fb141cf27f1c4ea10714edde365b411dc0fa06c81c0f282ce155eb9fa472b6b8bb9ee98395eeaf4c5a7b02a01fe58b37ea98ba152eda4c37@13.50.94.193:31000,enode://72013391755f24f08567b932feeeec4c893c06e0b1fb480890c83bf87fd277ad86a5ab9cb586db9ae9970371a2f8cb0c96f6c9f69045abca0fb801db7f047138@51.20.235.126:31001
      - --verbosity=3
      # Engine API / JWT auth
      - --authrpc.addr=0.0.0.0
      - --authrpc.port=8550
      - --authrpc.vhosts=*
      - --authrpc.jwtsecret=/root/.ethereum/jwt
    ports:
      - 30303:30303
      - 30303:30303/udp
      - 8545:8545
      - 8546:8546
      - 8550:8550
    volumes:
      - ./geth/geth-genesis.json:/genesis.json:ro
      - ./engine-jwt:/root/.ethereum/jwt:ro
      - linea-mainnet-geth:/root/.ethereum

  # Erigon initialization
  erigon-init:
    image: erigontech/erigon:2.61.0
    command:
      - init
      - /genesis.json
      - --datadir=/data
    volumes:
      - ./genesis.json:/genesis.json:ro
      - linea-mainnet-erigon:/home/erigon/.local/share/erigon/

  # Erigon node
  erigon-node:
    image: erigontech/erigon:2.61.0
    pull_policy: always
    restart: unless-stopped
    stop_grace_period: 30s
    depends_on:
      erigon-init:
        condition: service_completed_successfully
    command:
      - --networkid=59144
      - --prune=hrtc
      - --http
      - --http.addr=0.0.0.0
      - --http.port=8545
      - --http.corsdomain=*
      - --http.api=admin,web3,eth,txpool,net
      - --http.vhosts=*
      - --bootnodes=enode://97706526cf79df9d930003644f9156805f6c8bd964fc79e083444f7014ce10c9bdd2c5049e63b58040dca1d4c82ebef970822198cf0714de830cff4111534ff1@18.223.198.165:31004,enode://b7c1b2bed65a855f7a2104aac9a14674dfdf018fdac763415b373b29ce18cdb81d36328ba4e5c9f12629f3a50c3e8f9ee048f22dbdbe93a82813da89c6b81334@51.20.235.126:31004,enode://c22eb0d40fc3ad5ea710aeddea906567778166bfe18c157955e8c39b23a46c45db18a0fa2ba07f2b64c81178a8c796aec2a29151533920ead06fcdfc6d8d03c6@47.128.192.57:31004
      - --verbosity=3
    ports:
      - 30303:30303
      - 30303:30303/udp
      - 8545:8545
    volumes:
      - ./genesis.json:/genesis.json:ro
      - linea-mainnet-erigon:/home/erigon/.local/share/erigon/

  # Nethermind node
  nethermind-node:
    hostname: nethermind-node
    container_name: nethermind-node
    image: nethermind/nethermind:1.32.4
    restart: unless-stopped
    command:
      - --datadir /nethermind/nethermind_db
      - --config linea-mainnet
      - --JsonRpc.Enabled=true
      - --JsonRpc.Host=0.0.0.0
      - --JsonRpc.Port=8545
      - --Metrics.Enabled=true
      - --Metrics.ExposePort=8008
    ports:
      - 8545:8545
      - 8008:8008
    volumes:
      - linea-mainnet-nethermind:/nethermind/nethermind_db
